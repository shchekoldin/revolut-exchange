// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component <CurrencyExchangeBase /> should render without errors render with static props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CurrencyExchangeBase
    balance={100}
    baseAmount={50}
    baseCurrency="EUR"
    onChange={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="currencyAmount"
        >
          <div
            className="label"
          >
            EUR
          </div>
          <input
            autoFocus={true}
            className="control amount"
            onChange={[Function]}
            step="0.01"
            type="number"
            value={50}
          />
        </div>,
        <div
          className="sub"
        >
          <div
            className="currencyBalance"
          >
            You have: 
            €
            100.00
          </div>
        </div>,
      ],
      "className": "CurrencyExchangeBase",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="label"
            >
              EUR
            </div>,
            <input
              autoFocus={true}
              className="control amount"
              onChange={[Function]}
              step="0.01"
              type="number"
              value={50}
            />,
          ],
          "className": "currencyAmount",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "EUR",
              "className": "label",
            },
            "ref": null,
            "rendered": "EUR",
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoFocus": true,
              "className": "control amount",
              "onChange": [Function],
              "step": "0.01",
              "type": "number",
              "value": 50,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="currencyBalance"
          >
            You have: 
            €
            100.00
          </div>,
          "className": "sub",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "You have: ",
              "€",
              "100.00",
            ],
            "className": "currencyBalance",
          },
          "ref": null,
          "rendered": Array [
            "You have: ",
            "€",
            "100.00",
          ],
          "type": "div",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="currencyAmount"
          >
            <div
              className="label"
            >
              EUR
            </div>
            <input
              autoFocus={true}
              className="control amount"
              onChange={[Function]}
              step="0.01"
              type="number"
              value={50}
            />
          </div>,
          <div
            className="sub"
          >
            <div
              className="currencyBalance"
            >
              You have: 
              €
              100.00
            </div>
          </div>,
        ],
        "className": "CurrencyExchangeBase",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="label"
              >
                EUR
              </div>,
              <input
                autoFocus={true}
                className="control amount"
                onChange={[Function]}
                step="0.01"
                type="number"
                value={50}
              />,
            ],
            "className": "currencyAmount",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "EUR",
                "className": "label",
              },
              "ref": null,
              "rendered": "EUR",
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoFocus": true,
                "className": "control amount",
                "onChange": [Function],
                "step": "0.01",
                "type": "number",
                "value": 50,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="currencyBalance"
            >
              You have: 
              €
              100.00
            </div>,
            "className": "sub",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "You have: ",
                "€",
                "100.00",
              ],
              "className": "currencyBalance",
            },
            "ref": null,
            "rendered": Array [
              "You have: ",
              "€",
              "100.00",
            ],
            "type": "div",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
